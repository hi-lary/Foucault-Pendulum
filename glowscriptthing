#constants
g = vector (0,9.8,0)
L = 1
lat = pi/6 #latitude
sol = 1000 #length of day in seconds

#Functions
def pol2cart(theta):
    return vector (cos((3*pi/2+theta))*L, sin((3*pi/2+theta))*L, 0)
    
def pol2cart2(theta):
    return vector(sin((theta))*2/3, 0, cos((theta))*2/3)
    
def latang(phi):
    return 2*pi*sin(phi)/sol #86164.0905
    
#objects
pegs = frame(pos=vector(0,-1.1,0))
ceiling = box(frame=pegs, pos=vector(0,0.025,0) - pegs.pos, length=0.1, width = 0.1, height = 0.1, color=color.yellow)
ball = sphere(pos = vector(o,o,o), radius = 0.1, color+color.blue)
floor = cylinder(pos=vector(0,-1.1,0), width=3, axis=vector(0,-.1,0), color+color.green)
string = curve(pos=[vector(0,0,0),ball.pos], radius=0.01)
trail = curve(frame=page)

alpha=0
while alpha < 2*pi:
    cylinder(frame=pegs,axis=(0,.15,0), radius=.03,color=color.cyan)
    alpha = alpha + pi/6
    
graphtheta = gdisplay()
massmovement = gcurve(color=color.yellow, gdisplay=graphtheta)
for t in arage(0.,5,0.01):
    massmovememnt.plot
    
#scene
scene.frame = pegs

#scense.stero = 'redcyan'
scene.userspin = False

#values

#ball 1 
L = 1
theta = pi/7 #initial theta

ball.pos = pol2cart(theta)
ball.m = 4
ball.L = vector(0,0,0)
ball.I = ball.m*mag(ball.pos)**2

starting.pos = [vector(0,0,0),ball.pos]

#omega = (mag(g)/L)**(1/2)
Fg = -ball.m*g
Tg = cross(ball.pos,Fg)

#independent variables
beta = 0
t = 0
dt = 0.01

#loop
while 1==1:
    rate(100)
    
    Tg = cross(ball.pos,Fg)
    ball.L = ball.L + Tg * dt
    theta=theta + ball.L.z/ball.I * dt
    
    ball.pos = pol2chart(theta)
    string.pos = [vector(0,0,0),ball.pos]
    
    if t<6:
        trail.append(pos = vector(ball.pos.x*cos(beta),ball.pos.y - pegs.pos.y,ball.pos.x*sin(beta)))
    
    if t<6:
        massmovement.plot(pos=(ball.pos.x*cos(beta),ball.pos.x*sin(beta)))
    
    pegs.rotate(angle=(latang(lat)), axis = vector(0,1,0), origin = pegs.pos)
    
    beta = beta + latang(lat)
    scene.forward = -pol2cart2(beta)
    
        
    t = t + dt
